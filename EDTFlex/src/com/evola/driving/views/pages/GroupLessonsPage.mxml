<?xml version="1.0" encoding="utf-8"?>
<pages:AbstractPage xmlns:mx="http://www.adobe.com/2006/mxml"
					xmlns:pages="com.evola.driving.views.pages.*"
					xmlns:controls="com.evola.driving.controls.*"
					xmlns:views="com.evola.driving.views.*"
					xmlns:controls1="com.evola.driving.views.controls.*"
					xmlns:util="com.evola.driving.util.*"
					xmlns:containers="flexlib.containers.*">

	<controls1:UserHeaderControl/>

	<pages:PageContentWrapper direction="horizontal">

		<mx:VBox width="100%"
				 styleName="contentWrapper">

			<mx:HBox width="100%"
					 verticalAlign="middle">

				<mx:Box height="16"
						width="16"
						backgroundColor="{GroupColors.getColor(groupId)}"/>

				<mx:Label text="{groupName}"
						  fontSize="16"
						  fontWeight="bold"/>

			</mx:HBox>

			<mx:HRule width="100%"
					  styleName="pageTitleHrule"/>

			<mx:Text htmlText="{description}"
					 fontSize="14"
					 width="100%"/>

			<mx:Spacer height="20"/>

			<containers:FlowContainer width="100%"
									  verticalGap="20"
									  horizontalGap="20">

				<mx:Repeater id="rpt"
							 recycleChildren="true"
							 dataProvider="{lessons}"
							 width="100%">

					<controls1:LessonRenderer data="{rpt.currentItem}"
											  groupId="{groupId}"/>

				</mx:Repeater>

			</containers:FlowContainer>

			<mx:Spacer height="50"/>

		</mx:VBox>

		<mx:VBox width="300"
				 styleName="contentWrapper"
				 fontSize="16">

			<mx:Text text="Trenutni napredak ove grupe pitanja:"/>

			<mx:Label htmlText="{getTotalQuestionsLabel(learnedOnce, testedOnce, totalQuestions)}"/>
			<controls:BoxProgressBar progress="{(learnedOnce + testedOnce) / (2*totalQuestions)}"
									 width="100%"/>

			<mx:Label htmlText="{getLearnedQuestionsLabel(learnedOnce, totalQuestions)}"/>
			<controls:BoxProgressBar progress="{learnedOnce/totalQuestions}"
									 progressColor="0x00A300"
									 width="100%"/>

			<mx:Label htmlText="{getTestedQuestionsLabel(testedOnce, totalQuestions)}"/>
			<controls:BoxProgressBar progress="{testedOnce/totalQuestions}"
									 progressColor="0xFFC40D"
									 width="100%"/>

			<mx:Spacer height="50"/>

			<mx:VBox width="100%"
					 fontSize="12"
					 verticalGap="2">

				<mx:Label text="Pređi na druge grupe pitanja:"/>

				<mx:Repeater dataProvider="{PresenterProvider.mainPresenter.model.questionCategories}"
							 recycleChildren="true"
							 id="rptQC">

					<mx:HBox width="100%"
							 verticalAlign="middle">

						<mx:Box height="10"
								width="10"
								backgroundColor="{GroupColors.getColor(rptQC.currentIndex + 1)}"/>

						<controls:LinkLabel text="{rptQC.currentItem.name}"
											data="{rptQC.currentItem}"
											click="onCategoryClick(event)"/>

					</mx:HBox>


				</mx:Repeater>

			</mx:VBox>

		</mx:VBox>

	</pages:PageContentWrapper>

	<pages:PageFooter/>

	<util:EvolaHttpService id="service"
						   restUrl="statistics/loadLessons"
						   result="onLearnedPerCategory(event)"/>

	<mx:Script>
		<![CDATA[
			import com.evola.driving.model.QuestionCategory;
			import com.evola.driving.util.DrivingUtils;
			import com.evola.driving.util.GroupColors;
			import com.evola.driving.util.PageManager;
			import com.evola.driving.util.PresenterProvider;

			import mx.rpc.events.ResultEvent;

			[Bindable]
			private var groupId:int;

			[Bindable]
			private var lessons:XMLList;

			[Bindable]
			private var groupName:String;

			[Bindable]
			private var learnedOnce:int;

			[Bindable]
			private var testedOnce:int;

			[Bindable]
			private var totalQuestions:int;

			[Bindable]
			private var description:String;

			override protected function displayPage():void
			{

				var groupId:Object=params.id;

				//ako opet prikazujemo istu grupu ne brisemo renderere
				if (this.groupId != groupId)
				{

					lessons=new XMLList();
					groupName="momenat...";
					learnedOnce=0;
					testedOnce=0;
					totalQuestions=0;
					description="";
				}

				service.send({userId: Settings.user.id, categoryId: groupId});
			}

			protected function onLearnedPerCategory(event:ResultEvent):void
			{

				var result:XML=XML(event.result);

				groupName=result.attribute("category-name");
				groupId=result.attribute("category-id");
				lessons=result.children();

				var learned:int=0;
				var tested:int=0;
				var total:int=0;

				//sada vadimo statistike
				for each (var item:XML in lessons)
				{

					learned+=int(item.@learn1);
					tested+=int(item.@test1);
					total+=int(item.attribute("number-of-questions"));
				}

				learnedOnce=learned;
				testedOnce=tested;
				totalQuestions=total;

				var text:String="Ova grupa pitanja podeljena je na " + lessons.length() + " lekcija (od " + lessons[0].@title + " do " + lessons[lessons.length() - 1].@title + ").";
				text+="\n";
				text+="<i><font size=\"12\">Sa leve strane svake lekcije prikazan je tvoj učinak pri učenju lekcije prvi, drugi i treći put a sa desne strane učinak pri proveri znanja prvi odnosno drugi i treći put.</font></i>";
				text+="\n";
				text+="<i><font size=\"12\">U sredini je prikazan ukupan napredak nad lekcijom. Lekcija je 100% urađena ako je barem jednom kompletno pročitana i barem jednom kompletno proverena.</font></i>";

				description=text;
			}

			private function getTotalQuestionsLabel(learned:int, tested:int, total:int):String
			{

				var value:int=(learned + tested) * 100 / (2 * total);

				return "<b>" + value + "%</b>";
			}

			private function getLearnedQuestionsLabel(learned:int, total:int):String
			{

				return "Naučeno <b>" + learned + "</b> od " + total;
			}

			private function getTestedQuestionsLabel(tested:int, total:int):String
			{

				return "Provereno <b>" + tested + "</b> od " + total;
			}

			protected function onCategoryClick(event:MouseEvent):void
			{

				var qc:QuestionCategory=event.target.data;

				params.id=qc.id;

				displayPage();
			}
		]]>
	</mx:Script>


</pages:AbstractPage>
